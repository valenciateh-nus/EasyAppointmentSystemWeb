
package ws.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BusinessCategoryEntityWebService", targetNamespace = "http://ws.session.ejb/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BusinessCategoryEntityWebService {


    /**
     * 
     * @param password
     * @param email
     * @return
     *     returns java.util.List<ws.client.BusinessCategoryEntity>
     * @throws InvalidLoginCredentialException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveAllBusinessCategories", targetNamespace = "http://ws.session.ejb/", className = "ws.client.RetrieveAllBusinessCategories")
    @ResponseWrapper(localName = "retrieveAllBusinessCategoriesResponse", targetNamespace = "http://ws.session.ejb/", className = "ws.client.RetrieveAllBusinessCategoriesResponse")
    @Action(input = "http://ws.session.ejb/BusinessCategoryEntityWebService/retrieveAllBusinessCategoriesRequest", output = "http://ws.session.ejb/BusinessCategoryEntityWebService/retrieveAllBusinessCategoriesResponse", fault = {
        @FaultAction(className = InvalidLoginCredentialException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/retrieveAllBusinessCategories/Fault/InvalidLoginCredentialException")
    })
    public List<BusinessCategoryEntity> retrieveAllBusinessCategories(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws InvalidLoginCredentialException_Exception
    ;

    /**
     * 
     * @param password
     * @param businessCategoryId
     * @param email
     * @throws InvalidLoginCredentialException_Exception
     * @throws BusinessCategoryNotFoundException_Exception
     * @throws DeleteBusinessCategoryException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteBusinessCategory", targetNamespace = "http://ws.session.ejb/", className = "ws.client.DeleteBusinessCategory")
    @ResponseWrapper(localName = "deleteBusinessCategoryResponse", targetNamespace = "http://ws.session.ejb/", className = "ws.client.DeleteBusinessCategoryResponse")
    @Action(input = "http://ws.session.ejb/BusinessCategoryEntityWebService/deleteBusinessCategoryRequest", output = "http://ws.session.ejb/BusinessCategoryEntityWebService/deleteBusinessCategoryResponse", fault = {
        @FaultAction(className = InvalidLoginCredentialException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/deleteBusinessCategory/Fault/InvalidLoginCredentialException"),
        @FaultAction(className = BusinessCategoryNotFoundException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/deleteBusinessCategory/Fault/BusinessCategoryNotFoundException"),
        @FaultAction(className = DeleteBusinessCategoryException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/deleteBusinessCategory/Fault/DeleteBusinessCategoryException")
    })
    public void deleteBusinessCategory(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "businessCategoryId", targetNamespace = "")
        Long businessCategoryId)
        throws BusinessCategoryNotFoundException_Exception, DeleteBusinessCategoryException_Exception, InvalidLoginCredentialException_Exception
    ;

    /**
     * 
     * @param password
     * @param businessCategoryEntity
     * @param email
     * @return
     *     returns java.lang.String
     * @throws InvalidLoginCredentialException_Exception
     * @throws InputDataValidationException_Exception
     * @throws BusinessCategoryExistException_Exception
     * @throws UnknownPersistenceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewBusinessCategoryEntity", targetNamespace = "http://ws.session.ejb/", className = "ws.client.CreateNewBusinessCategoryEntity")
    @ResponseWrapper(localName = "createNewBusinessCategoryEntityResponse", targetNamespace = "http://ws.session.ejb/", className = "ws.client.CreateNewBusinessCategoryEntityResponse")
    @Action(input = "http://ws.session.ejb/BusinessCategoryEntityWebService/createNewBusinessCategoryEntityRequest", output = "http://ws.session.ejb/BusinessCategoryEntityWebService/createNewBusinessCategoryEntityResponse", fault = {
        @FaultAction(className = BusinessCategoryExistException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/createNewBusinessCategoryEntity/Fault/BusinessCategoryExistException"),
        @FaultAction(className = UnknownPersistenceException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/createNewBusinessCategoryEntity/Fault/UnknownPersistenceException"),
        @FaultAction(className = InputDataValidationException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/createNewBusinessCategoryEntity/Fault/InputDataValidationException"),
        @FaultAction(className = InvalidLoginCredentialException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/createNewBusinessCategoryEntity/Fault/InvalidLoginCredentialException")
    })
    public String createNewBusinessCategoryEntity(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "businessCategoryEntity", targetNamespace = "")
        BusinessCategoryEntity businessCategoryEntity)
        throws BusinessCategoryExistException_Exception, InputDataValidationException_Exception, InvalidLoginCredentialException_Exception, UnknownPersistenceException_Exception
    ;

    /**
     * 
     * @param password
     * @param businessCategoryName
     * @param email
     * @return
     *     returns ws.client.BusinessCategoryEntity
     * @throws InvalidLoginCredentialException_Exception
     * @throws BusinessCategoryNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveBusinessCategoriesByName", targetNamespace = "http://ws.session.ejb/", className = "ws.client.RetrieveBusinessCategoriesByName")
    @ResponseWrapper(localName = "retrieveBusinessCategoriesByNameResponse", targetNamespace = "http://ws.session.ejb/", className = "ws.client.RetrieveBusinessCategoriesByNameResponse")
    @Action(input = "http://ws.session.ejb/BusinessCategoryEntityWebService/retrieveBusinessCategoriesByNameRequest", output = "http://ws.session.ejb/BusinessCategoryEntityWebService/retrieveBusinessCategoriesByNameResponse", fault = {
        @FaultAction(className = InvalidLoginCredentialException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/retrieveBusinessCategoriesByName/Fault/InvalidLoginCredentialException"),
        @FaultAction(className = BusinessCategoryNotFoundException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/retrieveBusinessCategoriesByName/Fault/BusinessCategoryNotFoundException")
    })
    public BusinessCategoryEntity retrieveBusinessCategoriesByName(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "businessCategoryName", targetNamespace = "")
        String businessCategoryName)
        throws BusinessCategoryNotFoundException_Exception, InvalidLoginCredentialException_Exception
    ;

    /**
     * 
     * @param password
     * @param businessCategoryId
     * @param email
     * @return
     *     returns ws.client.BusinessCategoryEntity
     * @throws InvalidLoginCredentialException_Exception
     * @throws BusinessCategoryNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveBusinessCategoriesById", targetNamespace = "http://ws.session.ejb/", className = "ws.client.RetrieveBusinessCategoriesById")
    @ResponseWrapper(localName = "retrieveBusinessCategoriesByIdResponse", targetNamespace = "http://ws.session.ejb/", className = "ws.client.RetrieveBusinessCategoriesByIdResponse")
    @Action(input = "http://ws.session.ejb/BusinessCategoryEntityWebService/retrieveBusinessCategoriesByIdRequest", output = "http://ws.session.ejb/BusinessCategoryEntityWebService/retrieveBusinessCategoriesByIdResponse", fault = {
        @FaultAction(className = InvalidLoginCredentialException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/retrieveBusinessCategoriesById/Fault/InvalidLoginCredentialException"),
        @FaultAction(className = BusinessCategoryNotFoundException_Exception.class, value = "http://ws.session.ejb/BusinessCategoryEntityWebService/retrieveBusinessCategoriesById/Fault/BusinessCategoryNotFoundException")
    })
    public BusinessCategoryEntity retrieveBusinessCategoriesById(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "businessCategoryId", targetNamespace = "")
        Long businessCategoryId)
        throws BusinessCategoryNotFoundException_Exception, InvalidLoginCredentialException_Exception
    ;

}
